{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI User & Role Testing Application",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/users/": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "operationId": "read_users_api_v1_users__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "title": "Response Read Users Api V1 Users  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "operationId": "create_user_api_v1_users__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User",
        "operationId": "read_user_api_v1_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithRoles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "operationId": "update_user_api_v1_users__user_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/roles/{role_id}": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Assign Role To User",
        "description": "Assign a role to a user.",
        "operationId": "assign_role_to_user_api_v1_users__user_id__roles__role_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Assign Role To User Api V1 Users  User Id  Roles  Role Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Remove Role From User",
        "description": "Remove a role from a user.",
        "operationId": "remove_role_from_user_api_v1_users__user_id__roles__role_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Read Roles",
        "operationId": "read_roles_api_v1_roles__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  },
                  "title": "Response Read Roles Api V1 Roles  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{role_id}": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Read Role",
        "operationId": "read_role_api_v1_roles__role_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleWithUsers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{role_id}/users": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Get Role Users",
        "description": "Get all users assigned to a specific role.",
        "operationId": "get_role_users_api_v1_roles__role_id__users_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "title": "Response Get Role Users Api V1 Roles  Role Id  Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Role": {
        "properties": {
          "role_name": {
            "type": "string",
            "minLength": 1,
            "title": "Role Name",
            "description": "Name of the role"
          },
          "role_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Description",
            "description": "Description of the role"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "role_name",
          "id"
        ],
        "title": "Role"
      },
      "RoleWithUsers": {
        "properties": {
          "role_name": {
            "type": "string",
            "minLength": 1,
            "title": "Role Name",
            "description": "Name of the role"
          },
          "role_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Description",
            "description": "Description of the role"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "User Ids"
          }
        },
        "type": "object",
        "required": [
          "role_name",
          "id"
        ],
        "title": "RoleWithUsers",
        "description": "Role schema with its assigned users."
      },
      "User": {
        "properties": {
          "first_name": {
            "type": "string",
            "minLength": 1,
            "title": "First Name",
            "description": "User's first name"
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "title": "Last Name",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "User's email address"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus",
            "description": "User status",
            "default": "active"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email",
          "id",
          "username",
          "display_name"
        ],
        "title": "User"
      },
      "UserCreate": {
        "properties": {
          "first_name": {
            "type": "string",
            "minLength": 1,
            "title": "First Name",
            "description": "User's first name"
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "title": "Last Name",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "User's email address"
          },
          "password": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 6
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "User's password (optional, will be auto-generated if not provided)"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email"
        ],
        "title": "UserCreate"
      },
      "UserCreateResponse": {
        "properties": {
          "first_name": {
            "type": "string",
            "minLength": 1,
            "title": "First Name",
            "description": "User's first name"
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "title": "Last Name",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "User's email address"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus",
            "description": "User status",
            "default": "active"
          },
          "generated_password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated Password",
            "description": "Auto-generated password (only shown on creation)"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email",
          "id",
          "username",
          "display_name"
        ],
        "title": "UserCreateResponse"
      },
      "UserStatus": {
        "type": "string",
        "enum": [
          "active",
          "disabled",
          "terminated"
        ],
        "title": "UserStatus"
      },
      "UserUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "password": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 6
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "New password (optional)"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "User status"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserWithRoles": {
        "properties": {
          "first_name": {
            "type": "string",
            "minLength": 1,
            "title": "First Name",
            "description": "User's first name"
          },
          "last_name": {
            "type": "string",
            "minLength": 1,
            "title": "Last Name",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "User's email address"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus",
            "description": "User status",
            "default": "active"
          },
          "role_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Role Ids"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email",
          "id",
          "username",
          "display_name"
        ],
        "title": "UserWithRoles",
        "description": "User schema with their assigned roles."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}